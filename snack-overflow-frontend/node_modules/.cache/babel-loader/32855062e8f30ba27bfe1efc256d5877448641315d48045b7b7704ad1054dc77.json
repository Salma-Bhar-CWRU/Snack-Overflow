{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bhars\\\\OneDrive\\\\Bureau\\\\swe\\\\snack-overflow-frontend\\\\src\\\\pages\\\\AdminDashboard.js\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport SidebarLayout from \"../components/SidebarLayout\";\nimport \"./../index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AdminDashboard() {\n  _s();\n  const navigate = useNavigate();\n  const [orders, setOrders] = useState([]);\n  const [adminName, setAdminName] = useState(\"\");\n  useEffect(() => {\n    const user = JSON.parse(localStorage.getItem(\"user\"));\n    if (!user || user.userType !== \"admin\") {\n      navigate(\"/\");\n      return;\n    }\n    setAdminName(user.username);\n\n    // Fetch all orders\n    axios.get(\"http://localhost:5000/api/orders\").then(res => setOrders(res.data)).catch(() => alert(\"Failed to load orders\"));\n  }, [navigate]);\n  const updateOrderStatus = (orderId, status) => {\n    axios.patch(`http://localhost:5000/api/orders/${orderId}`, {\n      order_status: status\n    }).then(() => {\n      setOrders(prevOrders => prevOrders.map(order => order.order_id === orderId ? {\n        ...order,\n        order_status: status\n      } : order));\n      alert(`Order ${status}`);\n    }).catch(() => alert(\"Failed to update order status\"));\n  };\n  return /*#__PURE__*/_jsxDEV(SidebarLayout, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Welcome, \", adminName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"order-table-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uD83D\\uDCDC All Orders\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"order-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Order Number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"User ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Snack\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Date Ordered\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: orders.length > 0 ? orders.map(order => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: order.order_number\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: order.user_id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: order.snack_name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: new Date(order.date_ordered).toLocaleDateString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: order.order_status\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => updateOrderStatus(order.order_id, \"Approved\"),\n                style: {\n                  marginRight: \"5px\",\n                  backgroundColor: \"green\",\n                  color: \"white\",\n                  border: \"none\",\n                  padding: \"5px\",\n                  cursor: \"pointer\"\n                },\n                children: \"Approve\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => updateOrderStatus(order.order_id, \"Denied\"),\n                style: {\n                  backgroundColor: \"red\",\n                  color: \"white\",\n                  border: \"none\",\n                  padding: \"5px\",\n                  cursor: \"pointer\"\n                },\n                children: \"Decline\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 19\n            }, this)]\n          }, order.order_id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 17\n          }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              colSpan: \"6\",\n              children: \"No orders found.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(AdminDashboard, \"h17MGKBOCEOs7lyF+wZQx7btb1Y=\", false, function () {\n  return [useNavigate];\n});\n_c = AdminDashboard;\nexport default AdminDashboard;\nvar _c;\n$RefreshReg$(_c, \"AdminDashboard\");","map":{"version":3,"names":["axios","React","useEffect","useState","useNavigate","SidebarLayout","jsxDEV","_jsxDEV","AdminDashboard","_s","navigate","orders","setOrders","adminName","setAdminName","user","JSON","parse","localStorage","getItem","userType","username","get","then","res","data","catch","alert","updateOrderStatus","orderId","status","patch","order_status","prevOrders","map","order","order_id","children","fileName","_jsxFileName","lineNumber","columnNumber","className","length","order_number","user_id","snack_name","Date","date_ordered","toLocaleDateString","onClick","style","marginRight","backgroundColor","color","border","padding","cursor","colSpan","_c","$RefreshReg$"],"sources":["C:/Users/bhars/OneDrive/Bureau/swe/snack-overflow-frontend/src/pages/AdminDashboard.js"],"sourcesContent":["import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport SidebarLayout from \"../components/SidebarLayout\";\nimport \"./../index.css\";\n\nfunction AdminDashboard() {\n  const navigate = useNavigate();\n  const [orders, setOrders] = useState([]);\n  const [adminName, setAdminName] = useState(\"\");\n\n  useEffect(() => {\n    const user = JSON.parse(localStorage.getItem(\"user\"));\n    if (!user || user.userType !== \"admin\") {\n      navigate(\"/\");\n      return;\n    }\n    setAdminName(user.username);\n\n    // Fetch all orders\n    axios.get(\"http://localhost:5000/api/orders\")\n      .then((res) => setOrders(res.data))\n      .catch(() => alert(\"Failed to load orders\"));\n  }, [navigate]);\n\n  const updateOrderStatus = (orderId, status) => {\n    axios.patch(`http://localhost:5000/api/orders/${orderId}`, { order_status: status })\n      .then(() => {\n        setOrders((prevOrders) => prevOrders.map(order => \n          order.order_id === orderId ? { ...order, order_status: status } : order\n        ));\n        alert(`Order ${status}`);\n      })\n      .catch(() => alert(\"Failed to update order status\"));\n  };\n\n  return (\n    <SidebarLayout>\n      <h1>Welcome, {adminName}</h1>\n\n      <div className=\"order-table-wrapper\">\n        <h2>📜 All Orders</h2>\n        <table className=\"order-table\">\n          <thead>\n            <tr>\n              <th>Order Number</th>\n              <th>User ID</th>\n              <th>Snack</th>\n              <th>Date Ordered</th>\n              <th>Status</th>\n              <th>Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            {orders.length > 0 ? (\n              orders.map((order) => (\n                <tr key={order.order_id}>\n                  <td>{order.order_number}</td>\n                  <td>{order.user_id}</td>\n                  <td>{order.snack_name}</td>\n                  <td>{new Date(order.date_ordered).toLocaleDateString()}</td>\n                  <td>{order.order_status}</td>\n                  <td>\n                    <button\n                      onClick={() => updateOrderStatus(order.order_id, \"Approved\")}\n                      style={{ marginRight: \"5px\", backgroundColor: \"green\", color: \"white\", border: \"none\", padding: \"5px\", cursor: \"pointer\" }}\n                    >\n                      Approve\n                    </button>\n                    <button\n                      onClick={() => updateOrderStatus(order.order_id, \"Denied\")}\n                      style={{ backgroundColor: \"red\", color: \"white\", border: \"none\", padding: \"5px\", cursor: \"pointer\" }}\n                    >\n                      Decline\n                    </button>\n                  </td>\n                </tr>\n              ))\n            ) : (\n              <tr>\n                <td colSpan=\"6\">No orders found.</td>\n              </tr>\n            )}\n          </tbody>\n        </table>\n      </div>\n    </SidebarLayout>\n  );\n}\n\nexport default AdminDashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}